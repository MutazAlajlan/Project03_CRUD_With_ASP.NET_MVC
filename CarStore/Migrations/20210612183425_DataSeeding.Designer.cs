// <auto-generated />
using CarStore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CarStore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210612183425_DataSeeding")]
    partial class DataSeeding
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CarStore.Models.CarOrderModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChassisId")
                        .HasColumnType("int");

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<int>("EngineId")
                        .HasColumnType("int");

                    b.Property<int>("GearId")
                        .HasColumnType("int");

                    b.Property<float>("TotalPrice")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("ChassisId")
                        .IsUnique();

                    b.HasIndex("ColorId")
                        .IsUnique();

                    b.HasIndex("EngineId")
                        .IsUnique();

                    b.HasIndex("GearId")
                        .IsUnique();

                    b.ToTable("CarOrderModel");
                });

            modelBuilder.Entity("CarStore.Models.ChassisModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Chassis");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Image = "https://previews.123rf.com/images/nerthuz/nerthuz1610/nerthuz161000173/65011853-unibody-car-chassis.jpg",
                            Price = 15000f,
                            Type = "Sedan"
                        },
                        new
                        {
                            Id = 2,
                            Image = "https://preview.free3d.com/img/2016/04/2374224423268910544/6ud0kqh2-900.jpg",
                            Price = 20000f,
                            Type = "SUV"
                        });
                });

            modelBuilder.Entity("CarStore.Models.ColorModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Color");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Image = "https://st4.depositphotos.com/26898060/37821/i/450/depositphotos_378210622-stock-photo-modern-luxury-white-car-front.jpg",
                            Price = 5000f,
                            Type = "White"
                        },
                        new
                        {
                            Id = 2,
                            Image = "https://img.freepik.com/free-photo/front-view-generic-brandless-moder-car_110488-502.jpg",
                            Price = 5000f,
                            Type = "Black"
                        });
                });

            modelBuilder.Entity("CarStore.Models.EngineModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Engine");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Image = "https://carpart.com.au/uploads/images/blog/204/v6engine-1569930056.jpg",
                            Price = 15000f,
                            Type = "V-6"
                        },
                        new
                        {
                            Id = 2,
                            Image = "https://www.renderhub.com/markos3d/lsa-v8-engine-supercharged-muscle-car-engine/lsa-v8-engine-supercharged-muscle-car-engine-01.jpg",
                            Price = 30000f,
                            Type = "V-8"
                        },
                        new
                        {
                            Id = 3,
                            Image = "https://best-automechanicschools.com/wp-content/uploads/2018/11/turbocharger-vs-supercharger-v12-engine-18.png",
                            Price = 60000f,
                            Type = "V-12"
                        });
                });

            modelBuilder.Entity("CarStore.Models.GearModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gear");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Image = "https://st4.depositphotos.com/1000844/22907/i/1600/depositphotos_229077072-stock-photo-automatic-gear-box-stick.jpg",
                            Price = 20000f,
                            Type = "Automatic"
                        },
                        new
                        {
                            Id = 2,
                            Image = "https://miro.medium.com/max/2000/1*drEf-yp7j3_x23nJSo---w.jpeg",
                            Price = 10000f,
                            Type = "Manual"
                        });
                });

            modelBuilder.Entity("CarStore.Models.CarOrderModel", b =>
                {
                    b.HasOne("CarStore.Models.ChassisModel", "Chassis")
                        .WithOne("CarOrder")
                        .HasForeignKey("CarStore.Models.CarOrderModel", "ChassisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarStore.Models.ColorModel", "Color")
                        .WithOne("CarOrder")
                        .HasForeignKey("CarStore.Models.CarOrderModel", "ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarStore.Models.EngineModel", "Engine")
                        .WithOne("CarOrder")
                        .HasForeignKey("CarStore.Models.CarOrderModel", "EngineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarStore.Models.GearModel", "Gear")
                        .WithOne("CarOrder")
                        .HasForeignKey("CarStore.Models.CarOrderModel", "GearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chassis");

                    b.Navigation("Color");

                    b.Navigation("Engine");

                    b.Navigation("Gear");
                });

            modelBuilder.Entity("CarStore.Models.ChassisModel", b =>
                {
                    b.Navigation("CarOrder");
                });

            modelBuilder.Entity("CarStore.Models.ColorModel", b =>
                {
                    b.Navigation("CarOrder");
                });

            modelBuilder.Entity("CarStore.Models.EngineModel", b =>
                {
                    b.Navigation("CarOrder");
                });

            modelBuilder.Entity("CarStore.Models.GearModel", b =>
                {
                    b.Navigation("CarOrder");
                });
#pragma warning restore 612, 618
        }
    }
}
